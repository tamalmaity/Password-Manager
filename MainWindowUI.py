# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import mysql.connector
import easygui


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def __init__ (self):
        text = easygui.enterbox("Enter password to connect to database")
        try:
            self.mydb = mysql.connector.connect(host='localhost', user='root', password=text, database='password_mg', autocommit = True) # set autocommit, else after ...
            #closing program, add/delete/modify gets reverted back
        except Exception:
            error_dialog = QtWidgets.QErrorMessage()
            error_dialog.showMessage('ERROR IN CONNECTING DB')
            error_dialog.exec()

    def dsply_func(self):
        try:
            error_dialog = QtWidgets.QErrorMessage()
            error_dialog.showMessage('FETCHING DATA...')
            error_dialog.exec()

            mycursor = self.mydb.cursor()
            mycursor.execute("SELECT * FROM password_table")
            myresult = mycursor.fetchall()

            self.lst.clear() #To ensure we aren't printing the same data from start again after adding/deleting/modifying
            self.lst.addItem("PLATFORM-----USERNAME-----PASSWORD")
            for row in myresult:
                self.lst.addItem("{}-----{}-----{}".format(*row))

        except Exception:
            error_dialog = QtWidgets.QErrorMessage()
            error_dialog.showMessage('ERROR IN FETCHING DATA')
            error_dialog.exec()

    def add_func(self):
        try:
            first = self.ptfrmtxt.toPlainText()
            second = self.usrnmtxt.toPlainText()
            third = self.pswrdtxt.toPlainText()
            
            mycursor = self.mydb.cursor()
            sql = "INSERT INTO password_table (Platform, Username, Passwrd) VALUES (%s, %s, %s)"
            val = (first, second, third)
            mycursor.execute(sql, val)

            error_dialog = QtWidgets.QErrorMessage()
            error_dialog.showMessage('SUCCESSFULLY ADDED DATA')
            error_dialog.exec()

            self.dsply_func()
        except Exception:
            error_dialog = QtWidgets.QErrorMessage()
            error_dialog.showMessage('ERROR IN ADDING DATA')
            error_dialog.exec()

    def rmv_func(self):
        try:
            first = self.ptfrmtxt.toPlainText()
            adr = (first,)
            mycursor = self.mydb.cursor()

            sql = "DELETE FROM password_table WHERE Platform = %s"
            mycursor.execute(sql, adr)

            error_dialog = QtWidgets.QErrorMessage()
            error_dialog.showMessage('SUCCESSFULLY REMOVED DATA')
            error_dialog.exec()

            self.dsply_func()

        except Exception:
            error_dialog = QtWidgets.QErrorMessage()
            error_dialog.showMessage('ERROR IN DELETING DATA')
            error_dialog.exec()

    def mdfy_func(self):
        try:
            first = self.ptfrmtxt.toPlainText()
            second = self.usrnmtxt.toPlainText()
            third = self.pswrdtxt.toPlainText()
            sql = "UPDATE password_table SET Username = %s, Passwrd = %s WHERE Platform = %s"
            adr = (second, third, first)

            mycursor = self.mydb.cursor()
            mycursor.execute(sql, adr)

            error_dialog = QtWidgets.QErrorMessage()
            error_dialog.showMessage('SUCCESSFULLY MODIFIED DATA')
            error_dialog.exec()

            self.dsply_func()

        except Exception:
            error_dialog = QtWidgets.QErrorMessage()
            error_dialog.showMessage('ERROR IN MODIFYING DATA')
            error_dialog.exec()



    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(904, 637)

        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.dsplybtn = QtWidgets.QPushButton(self.centralwidget)
        self.dsplybtn.setGeometry(QtCore.QRect(760, 210, 101, 51))
        self.dsplybtn.setObjectName("dsplybtn")
        self.dsplybtn.clicked.connect(self.dsply_func)

        self.addbtn = QtWidgets.QPushButton(self.centralwidget)
        self.addbtn.setGeometry(QtCore.QRect(760, 290, 101, 51))
        self.addbtn.setObjectName("addbtn")
        self.addbtn.clicked.connect(self.add_func)

        self.rmvbtn = QtWidgets.QPushButton(self.centralwidget)
        self.rmvbtn.setGeometry(QtCore.QRect(760, 370, 101, 51))
        self.rmvbtn.setObjectName("rmvbtn")
        self.rmvbtn.clicked.connect(self.rmv_func)

        self.mdfybtn = QtWidgets.QPushButton(self.centralwidget)
        self.mdfybtn.setGeometry(QtCore.QRect(760, 450, 101, 51))
        self.mdfybtn.setObjectName("mdfybtn")
        self.mdfybtn.clicked.connect(self.mdfy_func)

        self.ptfrm = QtWidgets.QLabel(self.centralwidget)
        self.ptfrm.setGeometry(QtCore.QRect(100, 30, 67, 17))
        self.ptfrm.setObjectName("ptfrm")

        self.usrnm = QtWidgets.QLabel(self.centralwidget)
        self.usrnm.setGeometry(QtCore.QRect(96, 70, 71, 20))
        self.usrnm.setObjectName("usrnm")

        self.pswrd = QtWidgets.QLabel(self.centralwidget)
        self.pswrd.setGeometry(QtCore.QRect(96, 110, 71, 20))
        self.pswrd.setObjectName("pswrd")

        self.lst = QtWidgets.QListWidget(self.centralwidget)
        self.lst.setGeometry(QtCore.QRect(50, 150, 651, 461))
        self.lst.setObjectName("lst")

        self.ptfrmtxt = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.ptfrmtxt.setGeometry(QtCore.QRect(200, 20, 361, 31))
        self.ptfrmtxt.setObjectName("ptfrmtxt")

        self.usrnmtxt = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.usrnmtxt.setGeometry(QtCore.QRect(200, 60, 361, 31))
        self.usrnmtxt.setObjectName("usrnmtxt")

        self.pswrdtxt = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.pswrdtxt.setGeometry(QtCore.QRect(200, 100, 361, 31))
        self.pswrdtxt.setObjectName("pswrdtxt")

        self.note = QtWidgets.QLabel(self.centralwidget)
        self.note.setGeometry(QtCore.QRect(670, 20, 181, 111))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.note.setFont(font)
        self.note.setLineWidth(1)
        self.note.setTextFormat(QtCore.Qt.PlainText)
        self.note.setWordWrap(True)
        self.note.setIndent(-1)
        self.note.setObjectName("note")

        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Password Manager"))
        self.dsplybtn.setText(_translate("MainWindow", "DISPLAY"))
        self.addbtn.setText(_translate("MainWindow", "ADD"))
        self.rmvbtn.setText(_translate("MainWindow", "REMOVE"))
        self.mdfybtn.setText(_translate("MainWindow", "MODIFY"))
        self.ptfrm.setText(_translate("MainWindow", "Platform"))
        self.usrnm.setText(_translate("MainWindow", "Username"))
        self.pswrd.setText(_translate("MainWindow", "Password"))
        self.note.setText(_translate("MainWindow", "NOTE : You have to enter UNIQUE Platform name before using REMOVE and enter UNIQUE Platform, updated Username and Password before using MODIFY"))
